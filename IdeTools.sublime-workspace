{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"copy",
				"copyTemplateFiles"
			],
			[
				"tem",
				"templatesFolder"
			],
			[
				"v",
				"vc"
			],
			[
				"get",
				"getTemplateFiles"
			],
			[
				"temp",
				"templatePath"
			],
			[
				"co",
				"commands"
			],
			[
				"A",
				"AskChainItem"
			],
			[
				"pp",
				"pprint"
			],
			[
				"va",
				"validatorCallback"
			],
			[
				"sublime",
				"sublime-settings"
			],
			[
				"project",
				"projectName"
			],
			[
				"IdeT",
				"IdeToolsConfig"
			],
			[
				"Ide",
				"IdeToolsConfig"
			],
			[
				"che",
				"check_name"
			],
			[
				"pro",
				"projects"
			],
			[
				"re",
				"reload"
			],
			[
				"Pro",
				"ProjectException"
			],
			[
				"load",
				"loadSettings"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import sublime, sublime_plugin, sys, os, re, imp, pprint, shutil, ftplib\n\n#Some imports reload not be available in retail \nimport IdeTools.projects.Project\nimp.reload(IdeTools.projects.Project)\nimport IdeTools.helpers.JsonSettings\nimp.reload(IdeTools.helpers.JsonSettings)\n\nfrom pprint import pprint\nfrom .projects.Project import Project\nfrom .projects.PhpProject import PhpProject\nfrom .helpers.JsonSettings import JsonSettings\nfrom .helpers.AskChain import AskChain\n#from .helpers.TemplateTools import *\n\nclass CreateProjectCommand(sublime_plugin.WindowCommand):\n    def run(self):\n        tools = Project(self.window) \n        tools.create()\n\nclass IdeToolsCommand(sublime_plugin.WindowCommand):\n    def run(self, **args):\n        class TemplateFile(object):\n            def __init__(self, root, relativePath, filename):\n                self.root = root\n                self.relativePath = relativePath\n                self.filename = filename\n\n            def __repr__(self):\n                return os.path.join(self.root, self.relativePath, self.filename)\n\n        class Template(object):\n            def __init__(self, context, name, projectPath):\n                self.context = context\n                self.name = name\n                self.projectPath = projectPath\n\n                templatesFolder = os.path.join('IdeTools','templates',context,name)\n\n\n                self.sublimePackagesTemplatesPath = os.path.join(sublime.packages_path()\n                                                    ,templatesFolder)\n\n                self.sublimeUserTemplatesPath = os.path.join(sublime.packages_path()\n                                                    ,'User'\n                                                    ,templatesFolder)\n                \n                self.userDirTemplatesPath = os.path.join(os.getenv('USERPROFILE') or os.getenv('HOME')\n                                                    ,'.'+templatesFolder)\n\n\n                self.projectPath = projectPath\n                \n                self.files = []\n                #print(self.sublimePackagesTemplatesPath, self.sublimeUserTemplatesPath, self.userDirTemplatesPath)\n\n            def scanTemplateFiles(self):\n                for (root, dirs, files) in os.walk(self.sublimePackagesTemplatesPath):\n                    for file in files:\n                        self.files.append(self.getTemplateFile(root, file))\n\n                pprint(self.files)            \n\n            def getTemplateFile(self, root, file):\n                dirs = [ self.sublimeUserTemplatesPath\n                        ,self.userDirTemplatesPath]\n\n                relativePath = root.replace(\n                    self.sublimePackagesTemplatesPath, '').strip(os.sep)\n\n                for d in dirs:\n                    path = os.path.join(d, relativePath, file)\n                    if os.path.exists(path):\n                        root = d \n\n                return TemplateFile(root, relativePath, file)        \n            \n            def copyTemplateFiles(self):\n                for file in self.files:\n                    targetDir = os.path.join(self.projectPath, file.relativePath)\n                    if not os.path.exists(targetDir):\n                        os.makedirs(targetDir)                \n                    shutil.copy(str(file), targetDir)            \n\n            def process(self, file):\n                pass\n                        \n\n        \n                \n        template = Template('php','composer', '/Users/mrogur/Code/test/vc')\n        template.scanTemplateFiles()\n        template.copyTemplateFiles()\n        #template.copyFiles()\n        # def mu(result):\n        #     print(result)\n\n        # def vc(value):\n        #     return re.match(r'^[a-zA-Z]\\w+$',value) \n\n        # chain = AskChain(self.window, mu)\n        # chain.add(\"Select focus\", \"key5\", [['lick','select lick'],'second', 'third'])\n        # chain.add(\"First\", \"key\", \"ciułała\")\n        # chain.add(\"Second\", \"key3\", \"kardaśmon\", vc, errorType='error', errorMessage=\"Ni ni ni\")\n        # chain.add(\"Third\", \"ming\", ['first','second', 'third'])\n        # chain.add(\"Select focus\", \"key5\", ['lick','second', 'third'])\n        # chain.run()\n\n\nclass CreatePhpProjectCommand(sublime_plugin.WindowCommand):\n    def run(self):\n        tools = PhpProject(self.window)\n        tools.create()  \n        print(\"foo me\")",
			"file": "IdeTools.py",
			"file_size": 4329,
			"file_write_time": 130139916180000000,
			"settings":
			{
				"buffer_size": 4352,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/php/composer/bootstrap.php",
			"settings":
			{
				"buffer_size": 31,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/php/composer/src/data/settings.json",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/php/composer/src/index.php",
			"settings":
			{
				"buffer_size": 15,
				"line_ending": "Unix"
			}
		},
		{
			"file": "helpers/AskChain.py",
			"settings":
			{
				"buffer_size": 2760,
				"line_ending": "Unix"
			}
		},
		{
			"file": "helpers/TemplateTools.py",
			"settings":
			{
				"buffer_size": 1081,
				"line_ending": "Unix"
			}
		},
		{
			"file": "plan.txt",
			"settings":
			{
				"buffer_size": 1121,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 73.0,
		"selected_items":
		[
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			]
		],
		"width": 579.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"window.run_command('ide_tools')",
			"window.run_command('create_php_project')",
			"os.system('clear')",
			"import os",
			"os.system('clear')",
			"window.run_command('ide_tools')",
			"window.run_command('create_php_project')",
			"window.run_command('create_project')",
			"view.run_command('create_project')",
			"view.window().run_command('create_project')",
			"view.run_command('create_project')",
			"view.window().run_command('create_project')",
			"view.run_command('create_project')",
			"view.window().run_command('create_project')",
			"view.run_command('create_project')",
			"clear",
			"view.run_command('create_project')",
			"view.run_command('hello_world')",
			"view.run_command('hello_world)",
			"view.run_command('hello_world')",
			"view.run_command('hello_world)",
			"view.run_command('hello_world')",
			"view.run_command('hello_world)",
			"view.run_command('hello_world')",
			"view.run_command('hello_world)",
			"view.run_command('hello_world;",
			"view.run_command('hello_world')",
			"view.run_command('hello_world;",
			"import urllib,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib.install_opener(urllib.build_opener(urllib.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"import urllib,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"view.run_command('example')",
			"view.run_command(\"example\")"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/projects/PhpProject.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/helpers/JsonSettings.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/projects/Project.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/LiveReload/LiveReload.sublime-settings",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/plan.txt",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/Main.sublime-menu",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/helpers/TemplateTools.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/Default (OSX).sublime-keymap",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/Default(OSX).sublime-keymap",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/Default.sublime-keymap",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/templates/php/composer/composer.json",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/templates/php/composer/phpunit.xml",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/templates/php/composer/bootstrap.php",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/helpers/TemplateLoader.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/SublimeCodeIntel/Default (OSX).sublime-keymap",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/IdeTools.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/templates/php/composer.json",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/templates/php/bootstrap.php",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/templates/php/phpunit.xml",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/IdeToolsConfig.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/projects/__init__.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/__init__.py",
		"/Volumes/DATA/soft/AUTODESK_SKETCHBOOK_PRO_FOR_ENTERPRISE_MULTI_2014_MACOSX-XFORCE/x-force.nfo",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/projects/project.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Settings/SideBarEnhancements.json",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/LiveReload/LiveReload.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/User/LiveReload.sublime-settings",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/pathutil/pathutil.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/project/project.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/project/__init__.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/IdeTools/pathutil/__init__.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/MyPlug/MyPlug.sublime-project",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/MyPlug/DirUtil.py",
		"/Users/mrogur/Library/Application Support/Sublime Text 3/Packages/MyPlug/lib/DirUtil.py"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"<project>"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"getFileOverride",
			"path",
			"dir",
			"getTemplateFiles",
			"userDirTemplatePath",
			"userHome",
			"self.path",
			"path",
			"sublimeUserPath",
			",'templates'\n                                                    , context\n                                                    , name",
			"userPath",
			"            \n",
			"validatorCallback",
			"commands",
			"validatorCallback",
			"projectName",
			"assignName",
			"data",
			"_data",
			"IdeToolsConfig",
			"projects",
			"IdeTools.projects.Project",
			"projectPath",
			"make_project",
			"check_name",
			"project_name",
			"load_settings",
			"assign_name",
			"load_settings",
			"prompt_name",
			"projectData",
			"project_data",
			"project",
			")	",
			"loadSettings",
			"PhpProject",
			"		#",
			"IdeTools",
			"urllib2"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Project"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "IdeTools.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4352,
						"regions":
						{
						},
						"selection":
						[
							[
								1929,
								1929
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1472.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/php/composer/bootstrap.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31,
						"regions":
						{
						},
						"selection":
						[
							[
								31,
								31
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/php/composer/src/data/settings.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "templates/php/composer/src/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15,
						"regions":
						{
						},
						"selection":
						[
							[
								14,
								14
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "helpers/AskChain.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2760,
						"regions":
						{
						},
						"selection":
						[
							[
								2560,
								2560
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1061.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "helpers/TemplateTools.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1081,
						"regions":
						{
						},
						"selection":
						[
							[
								65,
								489
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "plan.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1121,
						"regions":
						{
						},
						"selection":
						[
							[
								1115,
								1115
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 168.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"project": "IdeTools.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"pro",
				"projects/Project.py"
			],
			[
				"pr",
				"projects/Project.py"
			],
			[
				"",
				"helpers/TemplateLoader.py"
			],
			[
				"jso",
				"helpers/JsonSettings.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"selected_items":
		[
		],
		"width": 378.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 241.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
